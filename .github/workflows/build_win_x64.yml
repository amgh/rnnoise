name: Build RNNoise DLL For Windows x64

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Checkout Source Code
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2. Set Up MSYS2 with mingw64 and Install Required Packages
      - name: Set up MSYS2 with mingw64
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: |
            mingw-w64-x86_64-toolchain
            autoconf
            automake
            libtool
            pkg-config
            make

      # 3. Verify MSYS2 Installation
      - name: Verify MSYS2 Installation
        shell: msys2 {0}
        run: |
          echo "Verifying MSYS2 Installation..."
          pacman --version
          gcc --version
          pkg-config --version
          make --version

      # 4. Clean Previous Builds
      - name: Clean previous builds
        shell: msys2 {0}
        run: |
          echo "Cleaning previous builds..."
          make clean || echo "No previous builds to clean."

      # 5. Run autogen.sh and Configure with Disabled Dependency Tracking
      - name: Run autogen.sh and configure
        shell: msys2 {0}
        run: |
          echo "Running autogen.sh..."
          chmod +x autogen.sh
          ./autogen.sh
          echo "Configuring build with optimization flags..."
          CFLAGS="-O3 -march=native -ffast-math -fPIC" \
          LDFLAGS="-shared -Wl,--out-implib,librnnoise.lib" \
          ./configure --host=x86_64-w64-mingw32 --disable-dependency-tracking

      # 6. Build RNNoise DLL with Parallel Jobs
      - name: Build RNNoise DLL
        shell: msys2 {0}
        run: |
          echo "Building RNNoise DLL..."
          make -j$(nproc)

      # 7. List Build Directory Contents (New Step)
      - name: List Build Directory Contents
        shell: msys2 {0}
        run: |
          echo "Listing contents of build directory..."
          ls -R .

      # 8. Test the Built DLL (Optional)
      - name: Test RNNoise DLL
        shell: msys2 {0}
        run: |
          echo "Testing RNNoise DLL..."
          echo "No tests implemented. Skipping."

      # 9. Upload RNNoise DLL as Artifact
      - name: Upload RNNoise DLL
        uses: actions/upload-artifact@v4
        with:
          name: rnnoise-dll
          path: .libs/rnnoise.dll

      # 10. Upload config.log on Failure
      - name: Upload config.log on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: config.log
          path: config.log

      # 11. (Optional) Upload MSYS2 Logs for Debugging
      - name: Upload MSYS2 Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: msys2-logs
          path: |
            /var/log/msys2.log
